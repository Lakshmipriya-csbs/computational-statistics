import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.datasets import load_wine
from sklearn.preprocessing import StandardScaler
wine = load_wine()
X = wine.data
y = wine.target
print("Number of classes and Features:")
print("Number of classes:", len(np.unique(y)))
print("Number of features:", X.shape[1])

lda = LinearDiscriminantAnalysis(n_components=2)
X_lda = lda.fit_transform(X, y)
# Print the variance ratio
print("Variance Ratio:")
print(lda.explained_variance_ratio_)
# Plot the LDA scatter plot
plt.figure(figsize=(8, 6))
for c, i, target_name in zip("rgb", [0, 1, 2], wine.target_names):
    plt.scatter(X_lda[y == i, 0], X_lda[y == i, 1], c=c, label=target_name)
plt.title('LDA of Wine dataset')
plt.xlabel('LD1')
plt.ylabel('LD2')
plt.legend()
plt.show()
print("LDA evaluation and scatter plot by eigenvalues and eigenvectors are done successfully using Python Script.")
